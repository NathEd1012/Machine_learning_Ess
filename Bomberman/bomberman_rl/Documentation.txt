# Understanding the code

## game_state

game_state is a dictionary with the following keys and exemplary values:

round: 1,
step: 44,
field:
    [[-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
    [-1  0  0  0  0  0  0  0  0  1  0  1  1  1  0  0 -1]
    [-1  0 -1  0 -1  0 -1  1 -1  1 -1  1 -1  1 -1  0 -1]
    [-1  0  1  0  1  0  1  1  0  1  1  1  1  1  1  0 -1]
    [-1  0 -1  0 -1  0 -1  0 -1  1 -1  0 -1  0 -1  0 -1]
    [-1  0  0  0  0  0  1  1  1  1  1  1  1  1  1  1 -1]
    [-1  0 -1  0 -1  1 -1  1 -1  0 -1  1 -1  0 -1  1 -1]
    [-1  0  1  0  1  1  1  0  1  1  1  0  0  1  1  0 -1]
    [-1  0 -1  1 -1  1 -1  1 -1  0 -1  1 -1  0 -1  0 -1]
    [-1  0  0  0  1  0  0  1  1  1  1  1  1  0  1  0 -1]
    [-1  0 -1  0 -1  1 -1  0 -1  0 -1  1 -1  0 -1  0 -1]
    [-1  0  0  0  1  1  1  0  1  1  0  0  0  0  0  0 -1]
    [-1  0 -1  0 -1  1 -1  1 -1  1 -1  0 -1  0 -1  0 -1]
    [-1  0  1  0  1  0  1  1  1  0  1  1  1  0  1  0 -1]
    [-1  0 -1  0 -1  1 -1  1 -1  0 -1  1 -1  0 -1  0 -1]
    [-1  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0 -1]
    [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]],
self: ('tests', 0, False, (3, 15)), # ('agent_name', current_score, bool: can place bombs, current coordinates)
others: [('rule_based_agent_0', 0, True, (11, 12)), ('rule_based_agent_1', 1, True, (5, 2)), ('rule_based_agent_2', 1, False, (5, 4))],
bombs: [((3, 15), 1)], # Coordinates: (y, x), # Countdown: 1
coins: [(4, 5), (15, 8), (2, 5)]: ,
user_input: None,
explosion_map:   
    x ->
y   [[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
|   [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
v   [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
    [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
    [0. 0. 0. (1.) 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
    [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
    [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
    [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
    [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
    [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
    [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
    [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
    [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
    [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
    [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
    [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
    [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]],

game_state can be accessed inside callbacks -> act, state_to_features